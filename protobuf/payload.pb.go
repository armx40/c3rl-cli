// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payload.proto

package payload

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Payload struct {
	Sequence             uint32            `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Code                 int32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Status               bool              `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Command              int32             `protobuf:"varint,4,opt,name=command,proto3" json:"command,omitempty"`
	A                    int32             `protobuf:"varint,5,opt,name=a,proto3" json:"a,omitempty"`
	B                    int32             `protobuf:"varint,6,opt,name=b,proto3" json:"b,omitempty"`
	C                    int32             `protobuf:"varint,7,opt,name=c,proto3" json:"c,omitempty"`
	D                    int32             `protobuf:"varint,8,opt,name=d,proto3" json:"d,omitempty"`
	Data                 []byte            `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
	DataI                map[string]int64  `protobuf:"bytes,10,rep,name=dataI,proto3" json:"dataI,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	DataS                map[string]string `protobuf:"bytes,11,rep,name=dataS,proto3" json:"dataS,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_678c914f1bee6d56, []int{0}
}

func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Payload) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Payload) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *Payload) GetCommand() int32 {
	if m != nil {
		return m.Command
	}
	return 0
}

func (m *Payload) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Payload) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

func (m *Payload) GetC() int32 {
	if m != nil {
		return m.C
	}
	return 0
}

func (m *Payload) GetD() int32 {
	if m != nil {
		return m.D
	}
	return 0
}

func (m *Payload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Payload) GetDataI() map[string]int64 {
	if m != nil {
		return m.DataI
	}
	return nil
}

func (m *Payload) GetDataS() map[string]string {
	if m != nil {
		return m.DataS
	}
	return nil
}

type DataLogLog struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Options              uint32   `protobuf:"varint,2,opt,name=options,proto3" json:"options,omitempty"`
	Time                 uint64   `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	Code                 uint32   `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Tag                  string   `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Sign                 []byte   `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	Hmac                 []byte   `protobuf:"bytes,8,opt,name=hmac,proto3" json:"hmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataLogLog) Reset()         { *m = DataLogLog{} }
func (m *DataLogLog) String() string { return proto.CompactTextString(m) }
func (*DataLogLog) ProtoMessage()    {}
func (*DataLogLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_678c914f1bee6d56, []int{1}
}

func (m *DataLogLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataLogLog.Unmarshal(m, b)
}
func (m *DataLogLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataLogLog.Marshal(b, m, deterministic)
}
func (m *DataLogLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataLogLog.Merge(m, src)
}
func (m *DataLogLog) XXX_Size() int {
	return xxx_messageInfo_DataLogLog.Size(m)
}
func (m *DataLogLog) XXX_DiscardUnknown() {
	xxx_messageInfo_DataLogLog.DiscardUnknown(m)
}

var xxx_messageInfo_DataLogLog proto.InternalMessageInfo

func (m *DataLogLog) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DataLogLog) GetOptions() uint32 {
	if m != nil {
		return m.Options
	}
	return 0
}

func (m *DataLogLog) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *DataLogLog) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DataLogLog) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *DataLogLog) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DataLogLog) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *DataLogLog) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

type DataLogMainFile struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FileCounter          uint32   `protobuf:"varint,2,opt,name=file_counter,json=fileCounter,proto3" json:"file_counter,omitempty"`
	FilePrefix           string   `protobuf:"bytes,3,opt,name=file_prefix,json=filePrefix,proto3" json:"file_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataLogMainFile) Reset()         { *m = DataLogMainFile{} }
func (m *DataLogMainFile) String() string { return proto.CompactTextString(m) }
func (*DataLogMainFile) ProtoMessage()    {}
func (*DataLogMainFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_678c914f1bee6d56, []int{2}
}

func (m *DataLogMainFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataLogMainFile.Unmarshal(m, b)
}
func (m *DataLogMainFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataLogMainFile.Marshal(b, m, deterministic)
}
func (m *DataLogMainFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataLogMainFile.Merge(m, src)
}
func (m *DataLogMainFile) XXX_Size() int {
	return xxx_messageInfo_DataLogMainFile.Size(m)
}
func (m *DataLogMainFile) XXX_DiscardUnknown() {
	xxx_messageInfo_DataLogMainFile.DiscardUnknown(m)
}

var xxx_messageInfo_DataLogMainFile proto.InternalMessageInfo

func (m *DataLogMainFile) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DataLogMainFile) GetFileCounter() uint32 {
	if m != nil {
		return m.FileCounter
	}
	return 0
}

func (m *DataLogMainFile) GetFilePrefix() string {
	if m != nil {
		return m.FilePrefix
	}
	return ""
}

type SDCardSettings struct {
	OPERATION_SETTINGS_SETTINGS             uint32   `protobuf:"varint,1,opt,name=OPERATION_SETTINGS_SETTINGS,json=OPERATIONSETTINGSSETTINGS,proto3" json:"OPERATION_SETTINGS_SETTINGS,omitempty"`
	OPERATION_SETTINGS_NUMBERS_SETTINGS     uint32   `protobuf:"varint,2,opt,name=OPERATION_SETTINGS_NUMBERS_SETTINGS,json=OPERATIONSETTINGSNUMBERSSETTINGS,proto3" json:"OPERATION_SETTINGS_NUMBERS_SETTINGS,omitempty"`
	OPERATION_SETTINGS_TIMINGS_SETTINGS     uint32   `protobuf:"varint,3,opt,name=OPERATION_SETTINGS_TIMINGS_SETTINGS,json=OPERATIONSETTINGSTIMINGSSETTINGS,proto3" json:"OPERATION_SETTINGS_TIMINGS_SETTINGS,omitempty"`
	OPERATION_SETTINGS_SENSOR_DATA_SETTINGS uint32   `protobuf:"varint,4,opt,name=OPERATION_SETTINGS_SENSOR_DATA_SETTINGS,json=OPERATIONSETTINGSSENSORDATASETTINGS,proto3" json:"OPERATION_SETTINGS_SENSOR_DATA_SETTINGS,omitempty"`
	OPERATION_SETTINGS_LOGGING_SETTINGS     uint32   `protobuf:"varint,5,opt,name=OPERATION_SETTINGS_LOGGING_SETTINGS,json=OPERATIONSETTINGSLOGGINGSETTINGS,proto3" json:"OPERATION_SETTINGS_LOGGING_SETTINGS,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{} `json:"-"`
	XXX_unrecognized                        []byte   `json:"-"`
	XXX_sizecache                           int32    `json:"-"`
}

func (m *SDCardSettings) Reset()         { *m = SDCardSettings{} }
func (m *SDCardSettings) String() string { return proto.CompactTextString(m) }
func (*SDCardSettings) ProtoMessage()    {}
func (*SDCardSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_678c914f1bee6d56, []int{3}
}

func (m *SDCardSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SDCardSettings.Unmarshal(m, b)
}
func (m *SDCardSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SDCardSettings.Marshal(b, m, deterministic)
}
func (m *SDCardSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDCardSettings.Merge(m, src)
}
func (m *SDCardSettings) XXX_Size() int {
	return xxx_messageInfo_SDCardSettings.Size(m)
}
func (m *SDCardSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_SDCardSettings.DiscardUnknown(m)
}

var xxx_messageInfo_SDCardSettings proto.InternalMessageInfo

func (m *SDCardSettings) GetOPERATION_SETTINGS_SETTINGS() uint32 {
	if m != nil {
		return m.OPERATION_SETTINGS_SETTINGS
	}
	return 0
}

func (m *SDCardSettings) GetOPERATION_SETTINGS_NUMBERS_SETTINGS() uint32 {
	if m != nil {
		return m.OPERATION_SETTINGS_NUMBERS_SETTINGS
	}
	return 0
}

func (m *SDCardSettings) GetOPERATION_SETTINGS_TIMINGS_SETTINGS() uint32 {
	if m != nil {
		return m.OPERATION_SETTINGS_TIMINGS_SETTINGS
	}
	return 0
}

func (m *SDCardSettings) GetOPERATION_SETTINGS_SENSOR_DATA_SETTINGS() uint32 {
	if m != nil {
		return m.OPERATION_SETTINGS_SENSOR_DATA_SETTINGS
	}
	return 0
}

func (m *SDCardSettings) GetOPERATION_SETTINGS_LOGGING_SETTINGS() uint32 {
	if m != nil {
		return m.OPERATION_SETTINGS_LOGGING_SETTINGS
	}
	return 0
}

func init() {
	proto.RegisterType((*Payload)(nil), "Payload")
	proto.RegisterMapType((map[string]int64)(nil), "Payload.DataIEntry")
	proto.RegisterMapType((map[string]string)(nil), "Payload.DataSEntry")
	proto.RegisterType((*DataLogLog)(nil), "DataLogLog")
	proto.RegisterType((*DataLogMainFile)(nil), "DataLogMainFile")
	proto.RegisterType((*SDCardSettings)(nil), "SDCardSettings")
}

func init() {
	proto.RegisterFile("payload.proto", fileDescriptor_678c914f1bee6d56)
}

var fileDescriptor_678c914f1bee6d56 = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcf, 0x8f, 0xd2, 0x40,
	0x14, 0x4e, 0x29, 0x3f, 0x1f, 0xb0, 0x6e, 0x46, 0x63, 0xc6, 0xf5, 0x60, 0x65, 0x0f, 0xd6, 0x0b,
	0x07, 0xbd, 0x6c, 0x3c, 0x98, 0xe0, 0x82, 0xa4, 0x09, 0x14, 0x32, 0xad, 0x67, 0x32, 0xb4, 0xb3,
	0x75, 0x22, 0x74, 0xb0, 0x1d, 0x8c, 0x1c, 0xfd, 0x1b, 0xfc, 0x37, 0xfc, 0x23, 0xcd, 0xcc, 0xb4,
	0x05, 0xb3, 0x6c, 0xd6, 0x53, 0xbf, 0xef, 0xe3, 0x7b, 0x6f, 0xde, 0xfb, 0x5e, 0x02, 0xf4, 0x77,
	0xf4, 0xb0, 0x11, 0x34, 0x1e, 0xee, 0x32, 0x21, 0xc5, 0xe0, 0x97, 0x0d, 0xad, 0xa5, 0x51, 0xd0,
	0x15, 0xb4, 0x73, 0xf6, 0x7d, 0xcf, 0xd2, 0x88, 0x61, 0xcb, 0xb1, 0xdc, 0x3e, 0xa9, 0x38, 0x42,
	0x50, 0x8f, 0x44, 0xcc, 0x70, 0xcd, 0xb1, 0xdc, 0x06, 0xd1, 0x18, 0x3d, 0x87, 0x66, 0x2e, 0xa9,
	0xdc, 0xe7, 0xd8, 0x76, 0x2c, 0xb7, 0x4d, 0x0a, 0x86, 0x30, 0xb4, 0x22, 0xb1, 0xdd, 0xd2, 0x34,
	0xc6, 0x75, 0x6d, 0x2f, 0x29, 0xea, 0x81, 0x45, 0x71, 0x43, 0x6b, 0x16, 0x55, 0x6c, 0x8d, 0x9b,
	0x86, 0xad, 0x15, 0x8b, 0x70, 0xcb, 0xb0, 0x48, 0xb1, 0x18, 0xb7, 0x0d, 0x8b, 0xd5, 0xeb, 0x31,
	0x95, 0x14, 0x77, 0x1c, 0xcb, 0xed, 0x11, 0x8d, 0xd1, 0x5b, 0x68, 0xa8, 0xaf, 0x87, 0xc1, 0xb1,
	0xdd, 0xee, 0xbb, 0xa7, 0xc3, 0x62, 0x8d, 0xe1, 0x58, 0xa9, 0x93, 0x54, 0x66, 0x07, 0x62, 0x1c,
	0xa5, 0x35, 0xc0, 0xdd, 0x33, 0xd6, 0xe0, 0xc4, 0x1a, 0x5c, 0xdd, 0x00, 0x1c, 0xeb, 0xd1, 0x25,
	0xd8, 0xdf, 0xd8, 0x41, 0x87, 0xd1, 0x21, 0x0a, 0xa2, 0x67, 0xd0, 0xf8, 0x41, 0x37, 0x7b, 0x13,
	0x84, 0x4d, 0x0c, 0xf9, 0x50, 0xbb, 0xb1, 0xca, 0xca, 0xe0, 0xbf, 0x2a, 0x3b, 0x27, 0x95, 0x83,
	0x3f, 0x96, 0x29, 0x9d, 0x89, 0x64, 0x26, 0x12, 0x74, 0x01, 0x35, 0x1e, 0x17, 0x07, 0xa8, 0xf1,
	0x58, 0xc5, 0x29, 0x76, 0x92, 0x8b, 0x34, 0xd7, 0xa5, 0x7d, 0x52, 0x52, 0x15, 0x8b, 0xe4, 0x5b,
	0xa6, 0xe3, 0xaf, 0x13, 0x8d, 0xab, 0x43, 0xd5, 0xb5, 0xd5, 0x1c, 0xea, 0x12, 0x6c, 0x49, 0x13,
	0x1d, 0x7c, 0x87, 0x28, 0x58, 0x05, 0xda, 0x3c, 0x09, 0x14, 0x41, 0x3d, 0xe7, 0x49, 0xaa, 0x6f,
	0xd0, 0x23, 0x1a, 0x2b, 0xed, 0xeb, 0x96, 0x46, 0xfa, 0x12, 0x3d, 0xa2, 0xf1, 0x80, 0xc1, 0x93,
	0x62, 0xda, 0x39, 0xe5, 0xe9, 0x67, 0xbe, 0x61, 0xf7, 0x46, 0x7e, 0x0d, 0xbd, 0x3b, 0xbe, 0x61,
	0xab, 0x48, 0xec, 0x53, 0xc9, 0xb2, 0x62, 0xee, 0xae, 0xd2, 0x6e, 0x8d, 0x84, 0x5e, 0x81, 0xa6,
	0xab, 0x5d, 0xc6, 0xee, 0xf8, 0x4f, 0xbd, 0x42, 0x87, 0x80, 0x92, 0x96, 0x5a, 0x19, 0xfc, 0xb6,
	0xe1, 0x22, 0x18, 0xdf, 0xd2, 0x2c, 0x0e, 0x98, 0x94, 0x3c, 0x4d, 0x72, 0xf4, 0x11, 0x5e, 0x2e,
	0x96, 0x13, 0x32, 0x0a, 0xbd, 0x85, 0xbf, 0x0a, 0x26, 0x61, 0xe8, 0xf9, 0xd3, 0xa0, 0x02, 0xc5,
	0xfb, 0x2f, 0x2a, 0x4b, 0xf9, 0x43, 0xf9, 0x45, 0x73, 0xb8, 0x3e, 0x53, 0xef, 0x7f, 0x99, 0x7f,
	0x9a, 0x90, 0x93, 0x3e, 0x66, 0x5a, 0xe7, 0x5e, 0x9f, 0xc2, 0xf8, 0x48, 0xbb, 0xd0, 0x9b, 0xff,
	0x3b, 0x96, 0xfd, 0x40, 0xbb, 0xc2, 0x58, 0xb5, 0x0b, 0xe1, 0xcd, 0xd9, 0xed, 0xfc, 0x60, 0x41,
	0x56, 0xe3, 0x51, 0x38, 0x3a, 0xb6, 0x34, 0xc7, 0xbd, 0x3e, 0xb3, 0xa9, 0x32, 0x2b, 0xef, 0x23,
	0x43, 0xce, 0x16, 0xd3, 0xa9, 0xe7, 0x4f, 0x8f, 0x1d, 0x1b, 0x0f, 0x0c, 0x59, 0x18, 0x4b, 0xba,
	0x6e, 0xea, 0xbf, 0x8d, 0xf7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x58, 0x8b, 0x12, 0x4c, 0x47,
	0x04, 0x00, 0x00,
}
